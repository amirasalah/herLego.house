---
import Layout from "../layouts/Layout.astro";

export const prerender = true;
---

<Layout>
  <h1 class="my-7 text-2xl lg:text-4xl">Have a cool project in mind?</h1>
  <p id="formError" class="my-3 text-center text-xl font-bold text-red-500"></p>
  <p
    id="successMessage"
    class="my-3 text-center text-xl font-bold text-green-500"
  >
  </p>
  <form method="POST" id="emailForm" class="my-5 grid">
    <input
      placeholder="Name"
      class="my-3 rounded-md border-2 border-solid border-salmon p-3 text-gray-900 outline-0 placeholder:text-gray-400"
      type="text"
      id="name"
      autofocus
      name="name"
      required
    />
    <input
      type="email"
      class="my-3 rounded-md border-2 border-solid border-salmon p-3 text-gray-900 outline-0 placeholder:text-gray-400"
      placeholder="Email"
      id="email"
      name="email"
      required
    />
    <textarea
      class="my-3 rounded-md border-2 border-solid border-salmon p-3 text-gray-900 outline-0 placeholder:text-gray-400"
      placeholder="Message"
      id="message"
      name="message"
      required></textarea>
    <button
      class="my-8 rounded-md bg-salmon py-4 font-extrabold tracking-widest text-accent"
      type="submit">SEND</button
    >
  </form>
</Layout>
<script>
  import { init, sendForm } from "@emailjs/browser";

  init({ publicKey: "-LhOJHmCRayVEDvag" });

  const formErrorElement = document.getElementById(
    "formError"
  ) as HTMLParagraphElement;
  const successMessageElement = document.getElementById(
    "successMessage"
  ) as HTMLParagraphElement;

  document
    ?.getElementById("emailForm")
    ?.addEventListener("submit", async function (event) {
      event.preventDefault();

      try {
        // Fetch the FormData from the form
        const form = event.target as HTMLFormElement;

        sendForm("service_k5pniae", "template_w1i7i68", form)
          .then((response) => {
            formErrorElement.textContent = "";
            successMessageElement.textContent = "Message sent successfully!";
          })
          .catch((error) => {
            formErrorElement.textContent = error.message;
            successMessageElement.textContent = "";
          })
          .finally(() => {
            setTimeout(() => {
              formErrorElement.textContent = "";
              successMessageElement.textContent = "";
              form.reset();
            }, 5000);
          });
      } catch (error) {
        formErrorElement.textContent = "An unexpected error occurred.";
      }
    });
</script>
